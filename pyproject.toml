[tool.poetry]
name = "facenet-pytorch"
version = "0.1.0"
description = ""
authors = ["John Doe <john@doe>"]
readme = "README.md"
packages = [{include = "*",from="src"}]


[tool.poetry.dependencies]
python = "^3.12"
torch = {version = "^2.6.0", source="pytorch"}
torchvision = {version="*",source="pytorch"}
pillow = "*"
opencv-python = "*"
scipy = "*"
tqdm = "*"
pandas = "*"
jupyter = "*"
requests = "*"


[tool.poetry.group.dev.dependencies]
coverage = "*"
pytest = "*"
black = "*"
ruff = "*"
mypy = "*"


[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu126"
priority = "explicit"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    ".git",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "dependencies",
    "data"
]
# Same as Black.
line-length = 80
indent-width = 4
target-version = "py312"
[tool.ruff.lint]

select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

ignore=["W191","E111","E114","E117","D206","D300","Q000","Q001","Q002","Q003","COM812","COM819","ISC002","E101"]


[tool.ruff.lint.per-file-ignores]
"tests/*" = ["F811","F401"]

[tool.ruff.format]
quote-style = "single"
indent-style = "tab"
docstring-code-format = true
docstring-code-line-length = 10

[tool.mypy]
exclude=["dependencies"]
follow_untyped_imports = true



[tool.black]

line-length = 78
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = 'data|dependencies'
